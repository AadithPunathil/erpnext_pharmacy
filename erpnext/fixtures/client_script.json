[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2021-09-06 16:26:07.655080",
  "name": "Sales Invoice-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Sales Invoice', {\n\tonload: function(frm){\n\t  estimate_print(frm);\n\t\tif(frm.doc.customer){\n\t\t\tconsole.log(\"refreshed\");\n\t\t\tfrm.refresh_field('customer');\n \t\t\t// frm.trigger('customer');\n// \t\t\tfrm.refresh_field('taxes_and_charges');\n// \t\t\tfrm.trigger('taxes_and_charges');\n// \t\t\tfrm.refresh_field('taxes');\n\t\t}\n\t\tfrm.remove_custom_button('Fetch Timesheet');\n\t\tsetTimeout(() => {\n\t    frm.remove_custom_button(\"Maintenance Schedule\",'Create');\n\t\t\tfrm.remove_custom_button(\"Subscription\",'Create');\n\t\t\tfrm.remove_custom_button(\"Invoice Discounting\",'Create');\n\t\t\tfrm.remove_custom_button(\"E-Way Bill JSON\",'Create');\n\t\t\tfrm.remove_custom_button(\"Quotation\",'Get Items From');\n\t\t\tfrm.remove_custom_button('Fetch Timesheet');\n\t  },10);\n\t},\n\trefresh: function(frm){\n\t    estimate_print(frm);\n\t\tsetTimeout(() => {\n\t    frm.remove_custom_button(\"Maintenance Schedule\",'Create');\n\t\t\tfrm.remove_custom_button(\"Subscription\",'Create');\n\t\t\tfrm.remove_custom_button(\"Invoice Discounting\",'Create');\n\t\t\tfrm.remove_custom_button(\"E-Way Bill JSON\",'Create');\n\t\t\tfrm.remove_custom_button(\"Quotation\",'Get Items From');\n\t\t\tfrm.remove_custom_button('Fetch Timesheet');\n\t  },10);\n\t\t// frm.get_field(\"items\").grid.set_multiple_add(\"item_code\", \"qty\");\n\t},\n  validate: function(frm){\n    $.each(frm.doc.items || [], function(i, v) {\n      var batch_no = v.batch_no;\n      console.log(batch_no);\n      frappe.call({\n        method: 'frappe.client.get',\n        args: {\n          'doctype': 'Batch',\n          'filters': {'batch_id': batch_no}\n        },\n        callback: function(r){\n            frappe.model.set_value(v.doctype, v.name,\"expiry_date\", r.message.expiry_date);\n        }\n      });\n    });\n  },\n  search_item : function(frm){\n\t\tif(!frm.doc.customer){\n\t\t\tfrappe.throw(__('Select Customer before search'));\n\t\t}\n\t\tif(!frm.doc.selling_price_list){\n\t\t\tfrappe.throw(__('Please set price list for customer'));\n\t\t}\n\t\tif(!frm.doc.set_warehouse){\n\t\t\tfrappe.throw(__('Select Warehouse before search'));\n\t\t}\n    search_item_button(frm);\n  }\n});\n\nvar check_drug_class_restrictions = function(frm, cdt, cdn){\n    var child = locals[cdt][cdn];\n    console.log(child.item_code);\n    frappe.call({\n       method: 'frappe.client.get',\n       args: {\n           'doctype': 'Drug Prescription Class',\n           'filters': {'name': child.drug_prescription_class}\n       },\n       callback: function(r){\n           console.log(r.message);\n       }\n    });\n};\n\nvar add_expiry_date = function(frm, cdt, cdn){\n  var child = locals[cdt][cdn];\n  frappe.call({\n       method: 'frappe.client.get',\n       args: {\n           'doctype': 'Batch',\n           'filters': {'batch_id': child.batch_no}\n       },\n       callback: function(r){\n          frappe.model.set_value(cdt, cdn,\"expiry_date\", r.message.expiry_date);\n       }\n    });\n};\nfunction estimate_print(frm){\n    if(frm.doc.status==\"Draft\" && !frm.is_new()){\n        frm.add_custom_button(__(\"Estimate Print\"), function() {\n        frm.print_doc();\n    });\n    }\n}\n\nvar search_items = function(frm, values) {\n    if(values.search_field){\n        frappe.call({\n            \"method\": 'erpnext.accounts.doctype.sales_invoice.sales_invoice.check_superseded_item',\n            \"args\": {\n                    'item_name': values.search_field\n            },\n            callback: function(r){\n                if(r && r.message){\n                   frappe.msgprint({\n                       title: __('Item Superseded'),\n                       indicator: 'green',\n                       message: __('Item '+ r.message.item_name +' is Superseded by '+ r.message.superseded_item_name )\n                   });\n                }\n            }\n       });\n    }\n\tvar new_item=[];\n\tfrappe.call({\n\t\t\"method\": \"erpnext.controllers.queries.search_item_contents\",\n\t\t\"args\": {\n\t\t\t\"filter_value\": values.search_field,\n\t\t\t\"drug_content\": values.drug_contents,\n\t\t\t\"warehouse\": frm.doc.set_warehouse,\n\t\t\t\"price_list\": frm.doc.selling_price_list,\n\t\t\t\"sales\" : 1\n\t\t},\n\t\tcallback: function(ret){\n\t\t\tconsole.log(ret);\n\t\t\tif(ret && ret.message){\n\t\t\t\tnew_items_popup(frm, ret.message);\n\t\t\t}\n\t\t}\n\t});\n};\n\nvar search_item_button = function(frm){\n\tlet d = new frappe.ui.Dialog({\n    title: 'Search Items',\n    fields: [\n        {\n            label: 'ITEM DETAILS',\n            fieldname: 'search_field',\n            fieldtype: 'Data'\n        },\n        {\n            label:\"CONTENT\",\n            fieldname: 'drug_contents',\n            fieldtype: 'MultiSelectList',\n            get_data: function(txt) {\n\t\t\t\treturn frappe.db.get_link_options('Drug Content',txt);\n\t\t\t}\n        }\n    ],\n    primary_action_label: 'Search',\n        primary_action(values) {\n            console.log(values);\n            d.hide();\n            search_items(frm,values)\n        }\n\t});\n\td.show();\n}\n\nvar new_items_popup = function(frm, new_items) {\n    var d = new frappe.ui.Dialog({\n        title:__(\"Search Items\"),\n\t\t\t\twidth: 1000,\n        fields:[\n            {\n                \"fieldtype\": \"HTML\",\n                \"fieldname\": \"items_html\"\n            }\n        ],\n        primary_action_label: 'Add Items',\n        primary_action() {\n            var opts = d.item_check_list.get_item();\n            var me = d.item_check_list;\n            var items = \"\";\n            if(!opts.checked_items.length){\n                return;\n            }\n            else{\n                opts.checked_items.forEach((item, i) => {\n\n                    let row = frm.add_child('items', {\n                        item_code: item\n                    });\n                    frm.script_manager.trigger(\"item_code\", row.doctype, row.name);\n                    frm.refresh_field(\"items\");\n                });\n                frm.refresh_field('items');\n                frm.refresh_fields();\n                frm.trigger(\"validate\");\n            }\n            d.hide();\n    }\n    });\n    d.show();\n    d.get_primary_btn().attr('disabled', false);\n    d.fields_dict.items_html.$wrapper.html(\"\");\n\t\td.$wrapper.find('.modal-content').css(\"width\", \"800px\");\n        d.$wrapper.find('.modal-content').css(\"margin-left\", \"-100px\");\n    var items_area = $('<div class=\"col-md-12 col-sm-12\" style=\"min-height: 10px;\">').appendTo(d.fields_dict.items_html.wrapper);\n    d.item_check_list = new frappe.ItemsCheckList(items_area, frm, 0, d, new_items);\n};\n\nfrappe.ItemsCheckList = Class.extend({\n    init: function(wrapper, frm, disable, d, new_items) {\n        var me = this;\n        this.frm = frm;\n        this.wrapper = wrapper;\n        this.disable = disable;\n        $(wrapper).html('<div class=\"help\">' + __(\"Loading\") + '...</div>');\n        me.items = new_items;\n        me.show_items(frm, d);\n    },\n    show_items: function(frm, d) {\n        var me = this;\n        var i;\n        var table_row = '';\n        $(this.wrapper).empty();\n        var table_head = '';\n        if(this.items){\n            $.each(this.items, function(i, item) {\n\t\t\t\t\t\t\t\tvar drug_content = item.drug_content ? item.drug_content : '';\n                var item_check_field = repl('<div class=\"item\" \\\n                data-item-id=\"%(item_id)s\">\\\n                <input type=\"checkbox\" class=\"box\"> \\\n                </input>',\n                {item_id: item.item_code});\n                table_row += \"<tr><td>\"+item_check_field+\"</td><td>\"+__(item.item_code)+\"</td><td>\"+__(item.item_name)+\"</td><td>\"+drug_content+\"</td><td>\"+__(item.qty)+\"</td><td>\"+__(item.price)+\"</td></tr>\";\n            });\n        }\n        var table_html = `\n            <table width=\"100%\">\n                <tr>\n\t\t\t\t    <th width=\"5%\"></th>\n                    <th width=\"10%\">Item Code</th>\n\t\t\t\t\t<th width=\"20%\">Item Name</th>\n                    <th width=\"45%\">Contents</th>\n                    <th width=\"10%\">Qty</th>\n                    <th width=\"10%\">Price</th>\n                </tr>\n        `;\n        if (table_row){\n            table_html += table_row;\n        }\n        table_html += '</table>';\n        $(me.wrapper).append(table_html);\n    },\n    show: function() {\n        var me = this;\n        // uncheck all items\n        $(this.wrapper).find('input[type=\"checkbox\"]')\n            .each(function(i, checkbox) {\n                checkbox.checked = false;\n        });\n    },\n    get_item: function() {\n        var checked_items = [];\n        var unchecked_items = [];\n        $(this.wrapper).find('[data-item-id]').each(function() {\n            if($(this).find('input[type=\"checkbox\"]:checked').length) {\n                checked_items.push($(this).attr('data-item-id'));\n            } else {\n                unchecked_items.push($(this).attr('data-item-id'));\n            }\n        });\n        return {\n            checked_items: checked_items,\n            unchecked_items: unchecked_items\n        };\n    }\n});\n\n\nfrappe.ui.form.on('Sales Invoice Item', {\n\trate: function(frm, cdt,cdn) {\n\t\tvar d = locals[cdt][cdn];\n\t\tconsole.log(\"item\")\n\t\tfrm.trigger('selling_price_list');\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2021-08-12 17:22:56.361358",
  "name": "Sales Order-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Sales Order', {\n\tonload(frm) {\n\t    setTimeout(() => {\n\t        frm.remove_custom_button(\"Pick List\",'Create');\n\t        frm.remove_custom_button(\"Work Order\",'Create');\n\t        frm.remove_custom_button(\"Request for Raw Materials\",'Create');\n\t        frm.remove_custom_button(\"Project\",'Create');\n\t        frm.remove_custom_button(\"Project\",'Create');\n\t        frm.remove_custom_button(\"Subscription\",'Create');\n\t        \n\t    },5);\n\t\tif(frm.doc.workflow_state!='Demand Request Approved'){\n\t\t    frm.remove_custom_button('Sales Invoice','Create');\n        }\n        if(frm.doc.inter_company_order_reference){\n            frm.set_value('po_no', frm.doc.inter_company_order_reference);\n            frm.refresh_field('po_no');\n            frm.set_value('order_type',\"Sales\");\n            var c=frm.doc.company;\n            frappe.model.get_value('Company', {'company_name': c}, 'default_warehouse',\n            function(d) {\n                console.log(d);\n                frm.set_value(\"set_warehouse\",d.default_warehouse);\n            });\n        }\n\t},\n\tworkflow_state(frm) {\n\t\tif(frm.doc.workflow_state!='Demand Request Approved'){\n\t\t    frm.remove_custom_button('Sales Invoice','Create');\n        }\n\t},\n\trefresh(frm){\n\t    if(frm.doc.inter_company_order_reference){\n            frm.set_value('po_no', frm.doc.inter_company_order_reference);\n            frm.refresh_field('po_no');\n        }\n        setTimeout(() => {\n\t        frm.remove_custom_button(\"Pick List\",'Create');\n\t        frm.remove_custom_button(\"Work Order\",'Create');\n\t        frm.remove_custom_button(\"Request for Raw Materials\",'Create');\n\t        frm.remove_custom_button(\"Project\",'Create');\n\t        frm.remove_custom_button(\"Project\",'Create');\n\t        frm.remove_custom_button(\"Subscription\",'Create');\n\t        \n\t    },5);\n\t}\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Issue",
  "enabled": 1,
  "modified": "2021-07-13 10:11:33.282010",
  "name": "Issue-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Issue',{\n    onload(frm){\n        if(!(frappe.user.has_role('System Manager'))){\n            cur_frm.toggle_display('status',false);\n        }        \n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2021-08-27 19:00:14.370915",
  "name": "Item-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Item', {\n\tonload(frm) {\n\t\tvar cn= frappe.defaults.get_user_default(\"Company\");\n    frappe.call({\n      \"method\" : \"frappe.client.get_list\",\n      \"args\" : {\n        \"doctype\" : \"Warehouse\",\n        \"filters\" : {\"company\" : cn }\n      },\n      callback: function(r){\n        if(r){\n          console.log(r.message);\n        }\n        else{\n            return false;\n         }\n      }\n    });\n\n\t\tvar company = frappe.defaults.get_user_default(\"Company\");\n\t\tif(frm.is_new()){\n\t\t\tfrappe.db.get_value('Company', company, 'is_group', function(r) {\n\t\t\t\tif(r && r.is_group != 1){\n\t\t\t\t\tfrm.set_value('purchase_type', 'External');\n\t\t\t\t\tfrm.set_df_property('purchase_type', 'read_only', true);\n          frm.set_value('superseded_by_sg', false);\n          frm.set_df_property('disabled', 'read_only', true);\n          frm.set_df_property('superseded_by_sg', 'hidden', true);\n\t\t\t\t}\n\t\t\t\telse{\n          frm.set_value('purchase_type', 'Internal');\n          frm.set_df_property('superseded_by_sg', 'hidden', false);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tcheck_items(frm);\n\n\t},\n\trefresh(frm){\n\t\tcheck_items(frm);\n    var company = frappe.defaults.get_user_default(\"Company\");\n\t\tfrm.add_custom_button('Add Reorder', () => {\n\t\t   add_reorder(frm, company);\n\t\t});\n\t\tfrm.add_custom_button(__('Set Item Defaults'), function() {\n\t\t\tfrappe.call({\n\t\t\t\t\"method\": \"erpnext.controllers.item_setup.set_item_defaults_from_item\",\n\t\t\t\t\"args\": {\n\t\t\t\t\t\"item_code\": frm.doc.item_code\n\t\t\t\t},\n\t\t\t\tcallback: function(r){\n\t\t\t\t\tconsole.log(r);\n\t\t\t\t\tfrm.reload_doc();\n\t\t\t\t\tfrappe.msgprint(__('Item defaults succesfully updated'));\n\t\t\t\t}\n\t\t\t});\n  \t});\n    frm.add_custom_button(__('Set Tax Defaults'), function() {\n\t\t\tfrappe.call({\n\t\t\t\t\"method\": \"erpnext.controllers.item_setup.set_tax_defaults_from_item\",\n\t\t\t\t\"args\": {\n\t\t\t\t\t\"item_code\": frm.doc.item_code\n\t\t\t\t},\n\t\t\t\tcallback: function(r){\n\t\t\t\t\tconsole.log(r);\n\t\t\t\t\tfrm.reload_doc();\n\t\t\t\t\tfrappe.msgprint(__('Item defaults succesfully updated'));\n\t\t\t\t}\n\t\t\t});\n  \t});\n\n\t},\n\tvalidate: function(frm) {\n// \t\tvar company = frappe.defaults.get_user_default(\"Company\");\n// \t\tfrappe.db.get_value('Company', company, 'is_group', function(r) {\n// \t\t\tif(r && r.is_group != 1){\n// \t\t\t\tif(frm.doc.disabled == 0){\n// \t\t\t\t\tfrappe.validated = false;\n// \t\t\t\t\tfrappe.throw(__('You are not authorised to edit'));\n// \t\t\t\t\treturn false;\n// \t\t\t\t}\n// \t\t\t}\n// \t\t});\n\t},\n\tpurchase_type: function(frm){\n\t  if(frm.doc.purchase_type == 'Internal'){\n\t        frm.set_value('naming_series', 'IP-')\n\t    }\n\t    else if(frm.doc.purchase_type == 'External'){\n\t        frm.set_value('naming_series', 'EP-')\n\t    }\n\t},\n\titem_group: function(frm){\n\t    if(frm.doc.item_group){\n\t        frappe.db.get_value('Item Group', frm.doc.item_group, 'has_batch_no', function(ret){\n\t           frm.set_value('has_batch_no', ret.has_batch_no)\n\t        });\n\t    }\n\t}\n});\n\nvar check_items = function(frm){\n\tvar company = frappe.defaults.get_user_default(\"Company\");\n\tfrappe.db.get_value('Company', company, 'is_group', function(r) {\n\t\tif(r && r.is_group != 1){\n\t\t\tfrm.set_df_property('disabled', 'read_only', true);\n\t\t\tif(!frm.is_new()){\n\t\t\t\tset_item_readonly(frm);\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tfrm.set_df_property('disabled', 'read_only', false);\n\t\t}\n\t});\n};\n\nfrappe.ui.form.on('Item Drug Content', {\n\tdrug_content(frm) {\n\t\tset_drug_content_data(frm);\n\t}\n});\n\nvar set_drug_content_data = function(frm){\n  if(frm.doc.item_drug_content){\n    var drug_content = '';\n    frm.doc.item_drug_content.forEach(function(item, i){\n        if(i===0){\n            drug_content += item.drug_content;\n        }\n        else{\n            drug_content += ', '+item.drug_content;\n        }\n    });\n    frm.set_value('drug_content', drug_content);\n  }\n};\nfunction set_item_readonly(frm){\n  frm.set_df_property('disabled', 'read_only', true);\n  frm.set_df_property('item_name', 'read_only', true);\n  frm.set_df_property('allow_alternative_item', 'read_only', true);\n  frm.set_df_property('item_group', 'read_only', true);\n  frm.set_df_property('gst_hsn_code', 'read_only', true);\n  frm.set_df_property('is_nil_exempt', 'read_only', true);\n  frm.set_df_property('is_non_gst', 'read_only', true);\n  frm.set_df_property('stock_uom', 'read_only', true);\n  frm.set_df_property('include_item_in_manufacturing', 'read_only', true);\n  frm.set_df_property('valuation_rate', 'read_only', true);\n  frm.set_df_property('superseded_by_sg', 'read_only', true);\n\tfrm.set_df_property('superseded_item', 'read_only', true);\n  frm.set_df_property('over_delivery_receipt_allowance', 'read_only', true);\n  frm.set_df_property('over_billing_allowance', 'read_only', true);\n  frm.set_df_property('manufacturer', 'read_only', true);\n  frm.set_df_property('brand', 'read_only', true);\n\tfrm.set_df_property('uoms', 'read_only', true);\n  frm.set_df_property('prescription_drug_class', 'read_only', true);\n  frm.set_df_property('item_drug_content', 'read_only', true);\n  frm.set_df_property('item_packing_type', 'read_only', true);\n  frm.set_df_property('description', 'read_only', true);\n  frm.set_df_property('barcodes', 'read_only', true);\n  frm.set_df_property('shelf_life_in_days', 'read_only', true);\n  frm.set_df_property('end_of_life', 'read_only', true);\n  frm.set_df_property('default_material_request_type', 'read_only', true);\n  frm.set_df_property('warranty_period', 'read_only', true);\n  frm.set_df_property('weight_per_unit', 'read_only', true);\n  frm.set_df_property('weight_uom', 'read_only', true);\n  frm.set_df_property('has_batch_no', 'read_only', true);\n  frm.set_df_property('create_new_batch', 'read_only', true);\n  frm.set_df_property('batch_number_series', 'read_only', true);\n  frm.set_df_property('has_expiry_date', 'read_only', true);\n  frm.set_df_property('retain_sample', 'read_only', true);\n  frm.set_df_property('sample_quantity', 'read_only', true);\n  frm.set_df_property('has_serial_no', 'read_only', true);\n  frm.set_df_property('serial_no_series', 'read_only', true);\n  frm.set_df_property('item_defaults', 'read_only', true);\n  frm.set_df_property('has_variants', 'read_only', true);\n  frm.set_df_property('variant_based_on', 'read_only', true);\n  frm.set_df_property('attributes', 'read_only', true);\n  frm.set_df_property('is_purchase_item', 'read_only', true);\n  frm.set_df_property('purchase_uom', 'read_only', true);\n  frm.set_df_property('min_order_qty', 'read_only', true);\n  frm.set_df_property('sales_uom', 'read_only', true);\n  frm.set_df_property('max_discount', 'read_only', true);\n  frm.set_df_property('is_sales_item', 'read_only', true);\n  frm.set_df_property('taxes', 'read_only', true);\n  frm.set_df_property('reorder_levels', 'read_only', true);\n}\n\nfunction add_reorder(frm, company){\n  console.log(company);\n  let d = new frappe.ui.Dialog({\n    title: 'Reorder Details',\n    fields: [\n      {\n        label: 'Request for',\n        fieldname: 'warehouse',\n        fieldtype: 'Link',\n        options: 'Warehouse',\n        filters: { 'company' : company }\n      },\n      {\n        label: 'Re-order Level',\n        fieldname: 'warehouse_reorder_level',\n        fieldtype: 'Float'\n      },\n      {\n        label: 'Re-order Qty',\n        fieldname: 'warehouse_reorder_qty',\n        fieldtype: 'Float'\n      }\n    ],\n    primary_action_label: 'Add Reorder',\n    primary_action(values) {\n      var flag = 0;\n      for(var i=0; i<frm.doc.reorder_levels.length ; i++){\n        if(values.warehouse==frm.doc.reorder_levels[i].warehouse){\n            flag = 1;\n            frm.doc.reorder_levels[i].warehouse_reorder_level = values.warehouse_reorder_level;\n            frm.doc.reorder_levels[i].warehouse_reorder_qty = values.warehouse_reorder_qty;\n            frm.refresh();\n            frm.save();\n        }\n      }\n      if(flag==0){\n        let row = frm.add_child('reorder_levels', {\n          warehouse: values.warehouse\n        });\n        row.warehouse_group = values.warehouse;\n        row.warehouse_reorder_level = values.warehouse_reorder_level;\n        row.warehouse_reorder_qty = values.warehouse_reorder_qty;\n        row.material_request_type = 'Purchase';\n        frm.refresh_field(\"reorder_levels\");\n        frm.refresh();\n        frm.save();\n      }\n      d.hide();\n    }\n  });\n  d.show();\n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Order",
  "enabled": 1,
  "modified": "2021-08-28 15:34:42.567788",
  "name": "Purchase Order-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "var company,company_is_group,company_internal_supplier,company_external_supplier;\nfrappe.ui.form.on('Purchase Order', {\n  onload: function(frm){\n    setTimeout(() => {\n      frm.remove_custom_button(\"Product Bundle\",'Get Items From');\n      frm.remove_custom_button(\"Supplier Quotation\",'Get Items From');\n      frm.remove_custom_button(\"Update Rate as per Last Purchase\",'Tools');\n      frm.remove_custom_button(\"Link to Material Request\",'Tools');\n      frm.remove_custom_button('Subscription', 'Create');\n    },5);\n  },\n  refresh: function(frm) {\n\t\t\tset_supplier(frm);\n      check_company(frm);\n\t\t\tfrm.get_field(\"items\").grid.set_multiple_add(\"item_code\", \"qty\");\n\t\t\tsetTimeout(() => {\n        frm.remove_custom_button('Payment Request', 'Create');\n        }, 10);\n\t\t\tif(frm.doc.docstatus == 0){\n        frappe.call({\n      \t\t\t\t\t\"method\": \"frappe.client.get\",\n      \t\t\t\t\t\"args\": {\n      \t\t\t\t\t\t\t\"doctype\": \"Company\",\n      \t\t\t\t\t\t\t\"filters\": {\"company_name\": frm.doc.company }\n      \t\t\t\t\t},\n      \t\t\t\t\tcallback: function(r){\n      \t\t\t\t\tif(r && r.message ){\n      \t\t\t\t\t\t\tcompany_is_group =r.message.is_group;\n      \t\t\t\t\t\t\tif(!company_is_group){\n                      set_new_medicine_button(frm);\n                    }\n      \t\t\t\t\t}\n      \t\t\t\t\telse{\n      \t\t\t\t\t\t\treturn false;\n      \t\t\t\t\t}\n      \t\t\t}\n      \t});\n\t\t\t}\n\t\t\tcheck_company(frm);\n    },\n    order_type: function(frm){\n        check_order_type(frm);\n\t\t\t\tcheck_company(frm);\n    },\n    company: function(frm){\n\t\t\t\tcheck_company(frm);\n    },\n    search_item : function(frm){\n  \t\tif(!frm.doc.supplier){\n  \t\t\tfrappe.throw(__('Select Supplier before search'));\n  \t\t}\n      search_item_button(frm);\n    }\n});\nvar check_company = function(frm){\n  frappe.call({\n\t   \"method\": \"frappe.client.get\",\n\t\t \"args\": {\n\t\t     \"doctype\": \"Company\",\n\t\t\t\t \"filters\": {\"company_name\": frm.doc.company }\n  },\n\tcallback: function(r){\n\t   if(r){\n\t\t\t\tvar company_is_group =r.message.is_group;\n        if(!company_is_group){\n            set_item_filter(frm);\n            frm.set_df_property('order_type', 'read_only', false);\n            frm.refresh_field(\"order_type\");\n        }\n        else {\n          set_item_filter_central(frm);\n          frm.set_df_property('order_type', 'read_only', true);\n          frm.set_value(\"order_type\",\"External\");\n          frm.refresh_field(\"order_type\");\n        }\n      }\n    }\n\t});\n};\nvar set_item_filter = function(frm){\n\tfrm.set_query(\"item_code\", \"items\", function() {\n\t\t\treturn {\n\t\t\t\t\tquery: \"erpnext.controllers.queries.item_query\",\n\t\t\t\t\tfilters: {'purchase_type': frm.doc.order_type, 'is_purchase_item':1}\n\t\t\t};\n\t});\n};\nvar set_item_filter_central = function(frm){\n\tfrm.set_query(\"item_code\", \"items\", function() {\n\t\t\treturn {\n\t\t\t\t\tquery: \"erpnext.controllers.queries.item_query\",\n\t\t\t\t\tfilters: {'purchase_type': \"Internal\", 'is_purchase_item':1}\n\t\t\t};\n\t});\n};\nvar set_supplier = function(frm) {\n\tfrappe.call({\n\t\t\t\t\t\"method\": \"frappe.client.get\",\n\t\t\t\t\t\"args\": {\n\t\t\t\t\t\t\t\"doctype\": \"Company\",\n\t\t\t\t\t\t\t\"filters\": {\"company_name\": frm.doc.company }\n\t\t\t\t\t},\n\t\t\t\t\tcallback: function(r){\n\t\t\t\t\tif(r){\n\t\t\t\t\t\t\tcompany_is_group =r.message.is_group;\n\t\t\t\t\t\t\tcompany_external_supplier = r.message.external_supplier;\n\t\t\t\t\t\t\tcompany_internal_supplier = r.message.internal_supplier;\n\t\t\t\t\t\t\tcheck_order_type(frm);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t}\n\t});\n};\n\nvar set_new_medicine_button = function(frm) {\n\tvar new_item=[];\n\tfrm.add_custom_button(__('Get New Products'), function() {\n\t\tfrappe.call({\n\t\t\t\"method\": \"erpnext.controllers.queries.get_new_medicines\",\n\t\t\t\"args\": {\n\t\t\t\t\"company\": frm.doc.company, \"purchase_type\": frm.doc.order_type\n\t\t\t},\n\t\t\tcallback: function(ret){\n\t\t\t\tconsole.log(ret);\n\t\t\t\tif(ret && ret.message){\n\t\t\t\t\tnew_items_popup(frm, ret.message);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n};\n\nfunction check_order_type(frm){\n    if(!company_is_group){\n        if(frm.doc.order_type=='Internal'){\n            frm.set_value(\"supplier\",company_internal_supplier);\n        }\n        if(frm.doc.order_type=='External'){\n            frm.set_value(\"supplier\",company_external_supplier);\n        }\n        frm.set_df_property('supplier', 'read_only', true);\n    }\n    else{\n        frm.set_df_property('supplier', 'read_only', false);\n    }\n};\n\nvar new_items_popup = function(frm, new_items) {\n    var d = new frappe.ui.Dialog({\n        title:__(\"New Medicine\"),\n\t\t\t\twidth: 1000,\n        fields:[\n            {\n                \"fieldtype\": \"HTML\",\n                \"fieldname\": \"items_html\"\n            }\n        ],\n        primary_action_label: 'Add Items',\n        primary_action() {\n            var opts = d.item_check_list.get_item();\n            var me = d.item_check_list;\n            var items = \"\";\n            if(!opts.checked_items.length){\n                return;\n            }\n            else{\n                opts.checked_items.forEach((item, i) => {\n                    // let item_table = frappe.model.add_child(frm.doc, 'Items', 'items');\n                    // frappe.model.set_value(item_table.doctype, item_table.name, 'item_code', item);\n\t\t\t\t\t\t\t\t\t\tlet row = frm.add_child('items', {\n\t\t\t\t\t\t\t\t\t\t\titem_code: item\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tfrm.script_manager.trigger(\"item_code\", row.doctype, row.name);\n\t\t\t\t\t\t\t\t\t\tfrm.refresh_field(\"items\");\n                });\n                frm.refresh_field('items');\n                frm.refresh_fields();\n                frm.trigger(\"validate\");\n            }\n            d.hide();\n    }\n    });\n    d.show();\n    d.get_primary_btn().attr('disabled', false);\n    d.fields_dict.items_html.$wrapper.html(\"\");\n    var items_area = $('<div class=\"col-md-12 col-sm-12\" style=\"min-height: 10px;\">').appendTo(d.fields_dict.items_html.wrapper);\n    d.item_check_list = new frappe.ItemsCheckList(items_area, frm, 0, d, new_items);\n};\n\nfrappe.ItemsCheckList = Class.extend({\n    init: function(wrapper, frm, disable, d, new_items) {\n        var me = this;\n        this.frm = frm;\n        this.wrapper = wrapper;\n        this.disable = disable;\n        $(wrapper).html('<div class=\"help\">' + __(\"Loading\") + '...</div>');\n        me.items = new_items;\n        me.show_items(frm, d);\n    },\n    show_items: function(frm, d) {\n        var me = this;\n        var i;\n        var table_row = '';\n        $(this.wrapper).empty();\n        var table_head = '';\n        if(this.items){\n            $.each(this.items, function(i, item) {\n\t\t\t\t\t\t\t\tvar drug_content = item.drug_content ? item.drug_content : '';\n                var item_check_field = repl('<div class=\"item\" \\\n                data-item-id=\"%(item_id)s\">\\\n                <input type=\"checkbox\" class=\"box\"> \\\n                </input>',\n                {item_id: item.item_code});\n                table_row += \"<tr><td>\"+item_check_field+\"</td><td>\"+__(item.item_name)+\"</td><td>\"+drug_content+\"</td></tr>\";\n            });\n        }\n        var table_html = `\n            <table widht=\"100%\"><tr>\n\t\t\t\t\t\t\t\t<th></th>\n                <th>Product</th>\n                <th>Drug Content</th>\n            </tr>\n        `;\n        if (table_row){\n            table_html += table_row;\n        }\n        table_html += '</table>';\n        $(me.wrapper).append(table_html);\n    },\n    show: function() {\n        var me = this;\n        // uncheck all items\n        $(this.wrapper).find('input[type=\"checkbox\"]')\n            .each(function(i, checkbox) {\n                checkbox.checked = false;\n        });\n    },\n    get_item: function() {\n        var checked_items = [];\n        var unchecked_items = [];\n        $(this.wrapper).find('[data-item-id]').each(function() {\n            if($(this).find('input[type=\"checkbox\"]:checked').length) {\n                checked_items.push($(this).attr('data-item-id'));\n            } else {\n                unchecked_items.push($(this).attr('data-item-id'));\n            }\n        });\n        return {\n            checked_items: checked_items,\n            unchecked_items: unchecked_items\n        };\n    }\n});\n\nfrappe.ui.form.on('Purchase Order Item', {\n  item_code: function(frm, cdt, cdn){\n    var child = locals[cdt][cdn];\n    if(child.item_code.charAt(0)==\"E\"){\n        var p1=[];\n        var y=child.item_code\n        console.log(y)\n        console.log(\"External Item Added\")\n        frappe.call({\n            \"method\" : \"frappe.client.get_list\",\n            \"args\" : {\n                \"doctype\" : \"Item\",\n                \"filters\" : {\"item_code\":y},\n                \"fields\"  :[\"drug_content\"] \n            },\n            callback:function(r){\n                if(r){\n                    console.log(r);\n                    console.log(r.message[0]);\n                    p1=r.message[0].drug_content\n                    console.log(\"r1r1r1r1r1rr\",p1);\n                    frappe.call({\n                        \"method\":\"frappe.client.get_list\",\n                        \"args\":{\n                            \"doctype\":\"Item\",\n                            \"filters\":{\"drug_content\":p1,\"purchase_type\":\"Internal\"},\n                            \"fields\":[\"item_name\"]\n                        },\n                        callback:function(r1){\n                                console.log(r1);\n                                var neww=r1.message;\n                                var neww2=[];\n                                for( var i=0;i<neww.length;i++){\n                                    console.log(neww[i].item_name)\n                                    var neww1=neww[i].item_name;\n                                    neww2.push(neww1)\n                                }\n                                console.log(\"weeeeeeeeeeeeeeeeeeeeeeeee\",neww2);\n                                frappe.msgprint({\n                                    title:__('Notification'),\n                                    indicator:'green',\n                                    message:__(\"You have similar Product in Storegenrix:\"+neww2)\n                                })\n                        }\n                    })\n                }\n            }\n        });\n    }\n    else{\n        console.log(child.item_code);\n        frappe.call({\n            method: 'frappe.client.get',\n            args: {\n                'doctype': 'Item',\n                'filters': {'item_code': child.item_code}\n            },\n            callback: function(r){\n                if(r.message.superseded_from){\n                frappe.msgprint({\n                    title: __('Notification'),\n                    indicator: 'green',\n                    message: __('Item '+r.message.superseded_from+' is superseded by '+child.item_code)\n                });\n                }\n            }\n        });\n    }\n    }\n});\n\nvar search_item_button = function(frm){\n\tlet d = new frappe.ui.Dialog({\n    title: 'Search Items',\n    fields: [\n        {\n            label: 'ITEM DETAILS',\n            fieldname: 'search_field',\n            fieldtype: 'Data'\n        },\n        {\n            label:\"CONTENT\",\n            fieldname: 'drug_contents',\n            fieldtype: 'MultiSelectList',\n            get_data: function(txt) {\n\t\t\t\treturn frappe.db.get_link_options('Drug Content',txt);\n\t\t\t}\n        }\n    ],\n    primary_action_label: 'Search',\n    primary_action(values) {\n        console.log(values);\n        d.hide();\n\t\tsearch_items(frm,values)\n    }\n\t});\n\td.show();\n}\n\nvar search_items = function(frm, values) {\n    if(values.search_field){\n        frappe.call({\n            \"method\": 'erpnext.accounts.doctype.sales_invoice.sales_invoice.check_superseded_item',\n            \"args\": {\n                    'item_name': values.search_field\n            },\n            callback: function(r){\n                if(r && r.message){\n                   frappe.msgprint({\n                       title: __('Item Superseded'),\n                       indicator: 'green',\n                       message: __('Item '+ r.message.item_name +' is Superseded by '+ r.message.superseded_item_name )\n                   });\n                }\n            }\n       });\n    }\n    \n\tvar new_item=[];\n\tfrappe.call({\n\t\t\"method\": \"erpnext.controllers.queries.search_item_contents\",\n\t\t\"args\": {\n\t\t\t\"filter_value\": values.search_field,\n\t\t\t\"drug_content\": values.drug_contents,\n            \"purchase\" : 1\n\t\t},\n\t\tcallback: function(ret){\n\t\t\tconsole.log(ret);\n\t\t\tif(ret && ret.message){\n\t\t\t\tnew_items_popups(frm, ret.message);\n\t\t\t}\n\t\t}\n\t});\n};\n\nvar new_items_popups = function(frm, new_items) {\n    var d = new frappe.ui.Dialog({\n        title:__(\"Search Items\"),\n\t\t\t\twidth: 1000,\n        fields:[\n            {\n                \"fieldtype\": \"HTML\",\n                \"fieldname\": \"items_html\"\n            }\n        ],\n        primary_action_label: 'Add Items',\n        primary_action() {\n            var opts = d.item_check_list.get_item();\n            var me = d.item_check_list;\n            var items = \"\";\n            if(!opts.checked_items.length){\n                return;\n            }\n            else{\n                opts.checked_items.forEach((item, i) => {\n                    let row = frm.add_child('items', {\n                        item_code: item\n                    });\n                    frm.script_manager.trigger(\"item_code\", row.doctype, row.name);\n                    frm.refresh_field(\"items\");\n                });\n                frm.refresh_field('items');\n                frm.refresh_fields();\n                frm.trigger(\"validate\");\n            }\n            d.hide();\n    }\n    });\n    d.show();\n    d.get_primary_btn().attr('disabled', false);\n    d.fields_dict.items_html.$wrapper.html(\"\");\n\t\td.$wrapper.find('.modal-content').css(\"width\", \"800px\");\n        d.$wrapper.find('.modal-content').css(\"margin-left\", \"-100px\");\n    var items_area = $('<div class=\"col-md-12 col-sm-12\" style=\"min-height: 10px;\">').appendTo(d.fields_dict.items_html.wrapper);\n    d.item_check_list = new frappe.ItemsCheckList(items_area, frm, 0, d, new_items);\n};\n\nfrappe.ItemsCheckList = Class.extend({\n    init: function(wrapper, frm, disable, d, new_items) {\n        var me = this;\n        this.frm = frm;\n        this.wrapper = wrapper;\n        this.disable = disable;\n        $(wrapper).html('<div class=\"help\">' + __(\"Loading\") + '...</div>');\n        me.items = new_items;\n        me.show_items(frm, d);\n    },\n    show_items: function(frm, d) {\n        var me = this;\n        var i;\n        var table_row = '';\n        $(this.wrapper).empty();\n        var table_head = '';\n        if(this.items){\n            $.each(this.items, function(i, item) {\n\t\t\t\t\t\t\t\tvar drug_content = item.drug_content ? item.drug_content : '';\n                var item_check_field = repl('<div class=\"item\" \\\n                data-item-id=\"%(item_id)s\">\\\n                <input type=\"checkbox\" class=\"box\"> \\\n                </input>',\n                {item_id: item.item_code});\n                table_row += \"<tr><td>\"+item_check_field+\"</td><td>\"+__(item.item_code)+\"</td><td>\"+__(item.item_name)+\"</td><td>\"+drug_content+\"</td></tr>\";\n            });\n        }\n        var table_html = `\n            <table width=\"100%\">\n                <tr>\n\t\t\t\t    <th width=\"5%\"></th>\n                    <th width=\"10%\">Item Code</th>\n\t\t\t\t\t<th width=\"30%\">Item Name</th>\n                    <th width=\"55%\">Contents</th>\n                </tr>\n        `;\n        if (table_row){\n            table_html += table_row;\n        }\n        table_html += '</table>';\n        $(me.wrapper).append(table_html);\n    },\n    show: function() {\n        var me = this;\n        // uncheck all items\n        $(this.wrapper).find('input[type=\"checkbox\"]')\n            .each(function(i, checkbox) {\n                checkbox.checked = false;\n        });\n    },\n    get_item: function() {\n        var checked_items = [];\n        var unchecked_items = [];\n        $(this.wrapper).find('[data-item-id]').each(function() {\n            if($(this).find('input[type=\"checkbox\"]:checked').length) {\n                checked_items.push($(this).attr('data-item-id'));\n            } else {\n                unchecked_items.push($(this).attr('data-item-id'));\n            }\n        });\n        return {\n            checked_items: checked_items,\n            unchecked_items: unchecked_items\n        };\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Rack",
  "enabled": 1,
  "modified": "2021-07-04 19:15:11.099285",
  "name": "Rack-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Rack', {\n  refresh: function(frm) {\n\t\tif(frm.doc.company){\n\t\t\tfrm.set_query('shelf_name', () => {\n    \t\treturn {\n\t        filters: {\n\t            company: frm.doc.company\n\t        }\n    \t\t};\n\t\t\t});\n\t\t}\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Shelf",
  "enabled": 1,
  "modified": "2021-07-04 19:15:29.478721",
  "name": "Shelf-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Shelf', {\n  refresh: function(frm) {\n\t\tif(frm.doc.company){\n\t\t\tfrm.set_query('room_name', () => {\n    \t\treturn {\n\t        filters: {\n\t            company: frm.doc.company\n\t        }\n    \t\t};\n\t\t\t});\n\t\t}\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Receipt",
  "enabled": 1,
  "modified": "2021-08-23 12:35:09.553522",
  "name": "Purchase Receipt-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Purchase Receipt', {\n    onload: function(frm){\n        setTimeout(() => {\n            frm.remove_custom_button(\"Retention Stock Entry\",'Create');\n            frm.remove_custom_button(\"Subscription\",'Create');\n        },5);\n    },\n    fetch_batches: function(frm){\n        fetch_batches(frm);\n    },\n    supplier:function(frm){\n        console.log(\"Hello Supplier\");\n        if(frm.doc.supplier!=\"Internal Supplier SG\"){\n            console.log(\"Not Internal Supplier\")\n            frm.set_df_property(\"fetch_batches\",\"hidden\",true);\n        }\n        else{\n            frm.set_df_property(\"fetch_batches\",\"hidden\",false);\n        }\n    }\n});\nfunction fetch_batches(frm){\n    console.log(\"test1\");\n    console.log( frm.doc.purchase_invoice_reference);\n    var batches =[];\n    frappe.call({\n        \"method\" : \"frappe.client.get\",\n        \"args\" : {\n            \"doctype\" : \"Purchase Invoice\",\n            \"filters\" : {\"name\": frm.doc.purchase_invoice_reference}\n        },\n        callback: function(r){\n            if(r){\n                // console.log(\"exist\");\n                // console.log(r.message.items);\n                var j=0;\n                $.each(r.message.items, function(i, item) {\n                    // console.log(\"egfegerf\");\n                    // console.log(j);\n                    batches[j] = item.batch_no; j=j+1;\n                    // console.log(item.batch_no);\n                });\n                var j=0;\n    console.log(batches);\n    console.log(batches[0]);\n    $.each(frm.doc.items, function(i, item) {\n        console.log(\"dsvfdsgvef\");\n        item.batch_no=batches[j];\n        console.log(batches[j]);\n        j=j+1;\n    });\n    frm.refresh_field(\"items\");\n    frm.refresh();\n                \n            }\n            else{\n                return false;\n             }\n        }\n    });\n\n}\n\nvar tt;\nvar ii;\nfrappe.ui.form.on(\"Purchase Receipt Item\",{\n    rate:function(frm,cdt,cdn){\n        var d2=locals[cdt][cdn]\n        if(d2.rate>0){\n            tt=d2.rate;\n            console.log(tt)\n        }\n    },\n    free:function(frm,cdt,cdn){\n        var d=locals[cdt][cdn];\n        if(d.free==1){\n            frappe.model.set_value(cdt,cdn,\"rate\",0)\n        }\n        if(d.free==0){\n            frappe.model.set_value(cdt,cdn,\"rate\",tt)\n        }\n    },\n    discount:function(frm,cdt,cdn){\n        var d1=locals[cdt][cdn];\n        if(d1.discount>0){\n            console.log(\"Discount Entered\")\n            var result=d1.rate-d1.rate*d1.discount/100\n            frappe.model.set_value(cdt,cdn,\"rate\",result)\n        }\n    },\n    item_code:function(frm,cdt,cdn){\n        var d3=locals[cdt][cdn];\n        console.log(d3.item_code)\n        ii=d3.item_code;\n    },\n    set_prices:function(frm,cdt,cdn){\n        console.log(\"Set Priceeeeeeeeeees\")\n        frappe.new_doc(\"Item Price\",{\n            item_code:ii\n        })\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 1,
  "modified": "2021-08-17 10:45:09.389496",
  "name": "Purchase Invoice-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on(\"Purchase Invoice\",{\n    onload:function(frm){\n        var batches=[];;\n        var dates=[];\n        var a1=[];\n        var a2=[];\n        var a3=[];\n        var a4=[];\n        if(frm.doc.supplier!==\"Internal Supplier SG\"){\n        frappe.call({\n            \"method\":\"frappe.client.get\",\n            \"args\":{\n                \"doctype\":\"Purchase Receipt\",\n                \"filters\":{\"company\":frm.doc.company,\"supplier\":frm.doc.supplier}\n            },\n            callback:function(r){\n                if(r){\n                    console.log(r);\n                    console.log(r.message.items);\n                    var j=0;\n                    $.each(r.message.items, function(i, item) {\n                        console.log(\"egfegerf\");\n                        console.log(j);\n                        batches[j] = item.batch_no;\n                        dates[j]=item.batch_expiry_date;\n                        j=j+1;\n                        // console.log(item.batch_no);\n                    });\n                    var j=0;\n        console.log(batches);\n        $.each(frm.doc.items, function(i, item) {\n            item.batch_no=batches[j];\n            item.expiry_date=dates[j];\n            j=j+1;\n        });\n        frm.refresh_field(\"items\");\n        frm.refresh();\n                \n                }\n                else{\n                return false;\n                }\n            }\n        })\n        }\n        else{\n            console.log(\"Intercompany Purchase Invoice\")\n            frm.set_value(\"update_stock\",false);\n        }\n    }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Material Request",
  "enabled": 1,
  "modified": "2021-07-06 16:59:48.322504",
  "name": "Material Request-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Material Request', {\n\tonload(frm) {\n\t    setTimeout(() => {\n\t        frm.remove_custom_button(\"Supplier Quotation\",'Create');\n\t        frm.remove_custom_button(\"Request for Quotation\",'Create');\n\t        frm.remove_custom_button(\"Bill of Materials\",'Get Items From');\n\t        frm.remove_custom_button(\"Product Bundle\",'Get Items From');\n\t    },10);\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payment Entry",
  "enabled": 1,
  "modified": "2021-07-09 11:10:35.165531",
  "name": "Payment Entry-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Payment Entry', {\n\tonload(frm) {\n\t\tif(frm.doc.party_type){\n\t\t    frm.refresh_field(\"party_type\");\n\t\t    frm.refresh_field(\"party\");\n\t\t    frm.refresh_field(\"received_amount\");\n\t\t    frm.refresh_field(\"paid_amount\");\n\t\t    frm.refresh_field(\"get_outstanding_invoice\");\n\t\t    console.log(\"testing load\");\n\t\t}\n\t},\n\trefresh(frm) {\n\t\tif(frm.doc.party_type){\n\t\t    frm.refresh_field(\"party_type\");\n\t\t    frm.refresh_field(\"party\");\n\t\t    frm.refresh_field(\"received_amount\");\n\t\t    frm.refresh_field(\"paid_amount\");\n\t\t    frm.refresh_field(\"get_outstanding_invoice\");\n\t\t    console.log(\"testing refresh\");\n\t\t}\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Address",
  "enabled": 0,
  "modified": "2021-07-14 12:27:08.273767",
  "name": "Address-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Address', {\n  onload(frm) {\n\t\tcheck_customer(frm);\n\t},refresh(frm) {\n\t\tcheck_customer(frm);\n\t},\n  validate(frm){\n    check_customer(frm);\n  }\n\n});\n\nvar check_customer = function(frm){\n  $.each(frm.doc.links || [], function(i, v) {\n    console.log(\"test1\");\n    frappe.call({\n         method: 'frappe.client.get',\n         args: {\n             'doctype': 'Customer',\n             'filters': {'name': v.link_name}\n         },\n         callback: function(r){\n            if(r.message.customer_type == \"Business\"){\n              frm.set_df_property('tax_category', 'reqd', 1);\n              frm.set_df_property('gstin', 'reqd', 1);\n              frm.set_df_property('gst_state', 'reqd', 1);\n              frm.set_df_property('gst_state_number', 'reqd', 1);\n              frm.refresh_field('tax_category');\n              frm.refresh_field('gstin');\n              frm.refresh_field('gst_state_number');\n              frm.refresh_field('gst_state');\n            }\n         }\n    });\n  });\n};\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "ERPEaz",
  "enabled": 1,
  "modified": "2021-07-28 11:16:03.018928",
  "name": "ERPEaz-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('ERPEaz', {\n    onload(frm){\n        frm.set_value(\"date\", frappe.datetime.now_datetime());\n        frm.set_value(\"raised_from\",frappe.session.user);\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item Price",
  "enabled": 1,
  "modified": "2021-08-17 16:38:26.371007",
  "name": "Item Price-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Item Price', {\n\tvalidate(frm) {\n\t\tif(frm.doc.price_list_2!==\"\"){\n\t\t    if(frm.doc.price_list_2==\"Price To Franchaisee - (PTF)\"){\n\t\t        msgprint(\"Price List 2 Added Successfully\");\n\t\t    }\n\t\t}\n\t\tif(frm.doc.price_list_3!==\"\"){\n\t\t    if(frm.doc.price_list_3==\"Price To Customer - (PTC)\"){\n\t\t        msgprint(\"Price List 3 Added Successfully\");\n\t\t    }\n\t\t}\n\t},\n    after_save(frm) {\n        var pp=frappe.get_list(\"Item Price\");\n        console.log('kkkkkkkkkkkkkkkkkkkkkk');\n        console.log('999999999999999=============',pp);\n        console.log('itemcode ====',pp[0].item_code);\n        console.log('pricelist====',pp[0].price_list);\n        console.log('pricelist Rate====',pp[0].price_list_rate);\n        console.log('pricelist2===',pp[0].price_list_2);\n        console.log('pricelist3===',pp[0].price_list_3);\n        console.log('pricelist Rate 2===',pp[0].rate_for_price_list_2);\n        console.log('pricelist Rate 3===',pp[0].rate_for_price_list_3);\n        frappe.db.insert({\n            doctype: 'Item Price',\n            item_code:pp[0].item_code,\n            price_list:pp[0].price_list_2,\n            price_list_rate:pp[0].rate_for_price_list_2\n        }).then(function(doc) { \n            console.log(`${doc.doctype} ${doc.name} created on ${doc.creation}`);\n        });\n        frappe.db.insert({\n            doctype: 'Item Price',\n            item_code:pp[0].item_code,\n            price_list:pp[0].price_list_3,\n            price_list_rate:pp[0].rate_for_price_list_3\n        }).then(function(doc) { \n            console.log(`${doc.doctype} ${doc.name} created on ${doc.creation}`);\n        });\n    }   \n});\t",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Company",
  "enabled": 1,
  "modified": "2021-08-27 18:23:39.351980",
  "name": "Company-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Company', {\n\trefresh: function(frm) {\n    frm.add_custom_button(__('Set Item Defaults'), function() {\n\t\tfrappe.msgprint(__('Item defaults updation started'));\n  \t\tfrappe.call({\n  \t\t\t\"method\": \"erpnext.controllers.item_setup.set_item_defaults\",\n  \t\t\t\"args\": {\n  \t\t\t\t\"company\": frm.doc.company_name,\n\t\t\t\t\"warehouse\": frm.doc.default_warehouse,\n\t\t\t\t\"price_list\": frm.doc.default_price_list,\n\t\t\t\t\"supplier\": frm.doc.default_supplier\n  \t\t\t},\n  \t\t\tcallback: function(r){\n  \t\t\t\tconsole.log(r);\n\t\t\t\t\tfrappe.msgprint(__('Item defaults succesfully updated'));\n  \t\t\t}\n  \t\t});\n  \t});\n\n\tfrm.add_custom_button(__('Set Tax Defaults'), function() {\n\t\tfrappe.msgprint(__('Tax defaults updation started'));\n  \t\tfrappe.call({\n  \t\t\t\"method\": \"erpnext.controllers.item_setup.set_tax_defaults\",\n  \t\t\t\"args\": {\n  \t\t\t\t\"company\": frm.doc.company_name,\n\t\t\t\t\"warehouse\": frm.doc.default_warehouse,\n\t\t\t\t\"price_list\": frm.doc.default_price_list,\n\t\t\t\t\"tax_template\": frm.doc.default_tax_template,\n\t\t\t\t\"supplier\": frm.doc.default_supplier\n  \t\t\t},\n  \t\t\tcallback: function(r){\n  \t\t\t\tconsole.log(r);\n\t\t\t\t\tfrappe.msgprint(__('Tax defaults succesfully updated'));\n  \t\t\t}\n  \t\t});\n  \t});\n  }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Batch",
  "enabled": 1,
  "modified": "2021-09-08 15:39:29.902514",
  "name": "Batch-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Batch', {\n\tbatch_name(frm) {\n\t\tif(frm.doc.batch_name && frm.doc.item){\n\t\t    frm.set_value('batch_id', frm.doc.batch_name+\"-\"+frm.doc.item);\n\t\t    frm.refresh_field('batch_id');\n\t\t}\n\t},\n\tvalidate(frm){\n\t    if(frm.doc.batch_name && frm.doc.item){\n\t\t    frm.set_value('batch_id', frm.doc.batch_name+\"-\"+frm.doc.item);\n\t\t    frm.refresh_field('batch_id');\n\t\t}\n\t},\n\titem(frm){\n\t    if(frm.doc.batch_name && frm.doc.item){\n\t\t    frm.set_value('batch_id', frm.doc.batch_name+\"-\"+frm.doc.item);\n\t\t    frm.refresh_field('batch_id');\n\t\t}\n\t}\n});",
  "view": "Form"
 }
]